graph TB
    subgraph "Discord Platform"
        USER[User in Discord]
        DISCORD[Discord Server]
    end

    subgraph "Frontend Layer"
        BOT[Discord Bot<br/>discord.js/discord.py]
    end

    subgraph "Backend Layer - FastAPI Application"
        API[FastAPI Server<br/>Port: 8000]
        
        subgraph "API Endpoints"
            HEALTH["/health<br/>GET<br/>Health check"]
            QUERY["/api/rag-query<br/>POST<br/>Process user questions"]
            FEEDBACK["/api/feedback<br/>POST<br/>Collect user feedback"]
            INGEST["/api/ingest<br/>POST<br/>Add documents to KB"]
            METRICS["/api/metrics<br/>GET<br/>System metrics"]
        end
        
        subgraph "Middleware & Services"
            LOGGER[Logging Service<br/>Python logging/loguru]
            VALIDATOR[Request Validator<br/>Pydantic models]
            METRICS_SVC[Metrics Collector<br/>Request count, latency]
        end
    end

    subgraph "Data Science Layer - RAG Agent"
        RAG_CONTROLLER[RAG Controller]
        
        subgraph "RAG Pipeline"
            CHUNKER[Document Chunker]
            EMBEDDER[Embedding Generator<br/>Sentence Transformers]
            RETRIEVER[Vector Search<br/>Retrieval Engine]
            LLM[LLM Service<br/>DeepSeek/Azure OpenAI]
        end
    end

    subgraph "Data Layer"
        VECTOR_DB[(MongoDB Atlas<br/>Vector Search<br/>Embeddings Storage)]
        FEEDBACK_DB[(Feedback Storage<br/>MongoDB/PostgreSQL)]
        LOG_STORE[Log Storage<br/>Files/Cloud Logs]
    end

    subgraph "Infrastructure"
        ENV[Environment Config<br/>.env variables]
    end

    %% User Flow
    USER -->|Sends message| DISCORD
    DISCORD -->|Discord API| BOT
    BOT -->|HTTP Request| API

    %% API Routing
    API --> HEALTH
    API --> QUERY
    API --> FEEDBACK
    API --> INGEST
    API --> METRICS

    %% Query Flow
    QUERY -->|Validate request| VALIDATOR
    VALIDATOR -->|Log request| LOGGER
    VALIDATOR -->|Track metrics| METRICS_SVC
    VALIDATOR -->|Process query| RAG_CONTROLLER

    %% RAG Pipeline Flow
    RAG_CONTROLLER -->|Embed query| EMBEDDER
    EMBEDDER -->|Vector search| RETRIEVER
    RETRIEVER -->|Fetch vectors| VECTOR_DB
    RETRIEVER -->|Retrieved context| LLM
    LLM -->|Generate response| RAG_CONTROLLER
    RAG_CONTROLLER -->|Return answer| QUERY
    QUERY -->|HTTP Response| BOT
    BOT -->|Display answer| DISCORD
    DISCORD -->|Show to user| USER

    %% Ingestion Flow
    INGEST -->|Validate docs| VALIDATOR
    INGEST -->|Chunk documents| CHUNKER
    CHUNKER -->|Generate embeddings| EMBEDDER
    EMBEDDER -->|Store vectors| VECTOR_DB

    %% Feedback Flow
    FEEDBACK -->|Validate feedback| VALIDATOR
    FEEDBACK -->|Store feedback| FEEDBACK_DB
    FEEDBACK -->|Log feedback| LOGGER

    %% Logging Flow
    LOGGER -->|Write logs| LOG_STORE

    %% Metrics Flow
    METRICS -->|Retrieve metrics| METRICS_SVC
    METRICS_SVC -->|Return stats| METRICS

    %% Infrastructure
    ENV -.->|Configure| API
    ENV -.->|Configure| RAG_CONTROLLER

    style USER fill:#e1f5fe
    style DISCORD fill:#e1f5fe
    style BOT fill:#f3e5f5
    style API fill:#e8f5e9
    style QUERY fill:#fff9c4
    style FEEDBACK fill:#fff9c4
    style INGEST fill:#fff9c4
    style HEALTH fill:#fff9c4
    style METRICS fill:#fff9c4
    style RAG_CONTROLLER fill:#fce4ec
    style VECTOR_DB fill:#ffe0b2
    style FEEDBACK_DB fill:#ffe0b2
    style LLM fill:#f3e5f5